% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature_extract.R
\name{feature_extract}
\alias{feature_extract}
\title{Extract Features for CT Indication Prediction}
\usage{
feature_extract(data)
}
\arguments{
\item{data}{A data frame with the required columns.}
}
\value{
A data frame with extracted features.
}
\description{
This function processes the input data frame to extract both structured EHR and NLP features.
It prepares the data for use in a logistic regression model, which will predict
whether each CT scan was performed for surveillance or other reasons.
}
\details{
The function focuses on extracting features from the following columns:
\itemize{
  \item \code{patient_id}: Used to identify which CT reports belong to same patient.

  \item \code{diagnosis_date} and \code{ct_date}: Used to extract scan interval
        related temporal features.

  \item \code{provider_type}: Used for extracting provider-related features.

  \item \code{report}: NLP analysis performed to extract key phrase features.

  \item \code{symptom_diagnosis}, \code{lungdisease_diagnosis}, \code{Xray_count}:
        Utilized as part of structured EHR features.
}

The NLP analysis of the CT report consists of a six-step pipeline:
\enumerate{
  \item Segmentation: Dividing the text into meaningful segments (eg. Clinical History, Findings, Impression).
  \item Tokenization: Breaking down the text into individual words or tokens.
  \item Parts of Speech Tagging: Identifying the parts of speech for each token for phrase analysis.
  \item Key Phrase Analysis: Extracting important phrases from the text.
  \item Frequency-Based Feature Extraction: Analyzing the frequency of key terms and phrases.
}
}
\examples{
# Assuming 'data' is a data frame with the correct structure
features <- feature_extract(data)

}
