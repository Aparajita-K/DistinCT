% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_indication.R
\name{predict_indication}
\alias{predict_indication}
\title{Predict CT Scan Indications}
\usage{
predict_indication(
  feature_data,
  binarize_thr = NA,
  writeFile = TRUE,
  outputFilePath = "Predictions.xlsx"
)
}
\arguments{
\item{feature_data}{A data frame containing the features extracted by the `feature_extract` function.
The data frame should include the following features:
EHR Features: 'priorCT_6mon', 'provider_med', 'provider_onc', 'symptom_binary', 'LungDis_binary', 'Xray_count'.
NLP Features: 'DefinitiveTreat', 'Surveillance', 'Recurrence', 'FollowUp', 'Metastasis', 'Symptom', 'LC_Treat_Drug'.}

\item{binarize_thr}{Binarization threshold as a number in [0, 1] to classify 'Surveillance' vs 'Other Reasons'.
If set to NA (default), the threshold from the saved model is used.}

\item{writeFile}{A logical value indicating whether to write the output to an Excel file.
Defaults to TRUE.}

\item{outputFilePath}{A string specifying the file path for the Excel output file.
If writeFile is TRUE and no path is provided, the default is "Predictions.xlsx" in the
current working directory.}
}
\value{
A data frame identical to `feature_data` but with two additional columns:
`Prediction_Probability` and `CT_indication`. `Prediction_Probability` contains the
real-valued probability of a CT scan being for 'Surveillance', and `CT_indication`
contains the prediction 'Surveillance' or 'Other Reasons'. If `writeFile` is TRUE,
the output is also saved as an Excel file.
}
\description{
This function applies a pre-trained logistic regression model to predict the indication
for CT scans in long-term lung cancer survivors. It classifies each scan as either
'Surveillance' or 'Other Reasons' based on structured EHR and NLP features. The binarization
threshold can be specified, or the default from the model is used. If `writeFile`
is set to TRUE, the function also writes the output to an Excel file.
}
\examples{
# Assuming `feature_data` is a data frame with the required features
predictions <- predict_indication(feature_data,
                                 writeFile = TRUE,
                                 outputFilePath = "Model_Predictions.xlsx")
predictions <- predict_indication(feature_data)
predictions_custom_thr <- predict_indication(feature_data, binarize_thr = 0.5)

}
